syntax = "proto3";
option go_package = "user;user";


message BaseResp{
  int64 status_code = 1;
  string status_msg = 2;
}
message RegisterRequest{
  string user_name = 1; // UserName
  string pass_word = 2; // PassWord
}
message CheckUserRequest{
  string user_name = 1; // UserName
  string pass_word = 2; // PassWord
}

message RegisterResponse{
  BaseResp resp = 1;
  int64 id = 2;
}
message CheckUserResponse{
  BaseResp resp = 1;
  User user = 2;
}
message GetUserRequest{
  int64 id = 1;
}
message GetUserResponse{
  BaseResp resp = 1;
  User user = 2;
}
message GetFollowerListRequest{
  int64 id = 1;
}
message UserListResponse{
  BaseResp resp = 1;
  repeated User user = 2;
}

message GetFollowListRequest{
  int64 id = 1;
}

message FollowRequest{
  int64 from_user_id = 1;
  int64 to_user_id = 2;
}

message FollowResponse{
  BaseResp resp = 1;
}

message GetFriendResponse{
  BaseResp resp = 1;
  repeated FriendUser user_list = 2;
}

service UserService{
  rpc Register(RegisterRequest) returns (RegisterResponse){};
  rpc CheckUser(CheckUserRequest) returns (CheckUserResponse){};
  rpc GetUser(GetUserRequest) returns(GetUserResponse){};
  //  粉丝/好友列表
  rpc GetFollowerList(GetFollowerListRequest)returns(UserListResponse){};
  //  关注列表
  rpc GetFollowList(GetFollowListRequest) returns(UserListResponse){};
  //  关注某个用户
  rpc Follow(FollowRequest) returns(FollowResponse){};
  //  取消关注某个用户
  rpc UnFollow(FollowRequest) returns(FollowResponse){};
  // 获取好友列表, 并且获取当前好友的消息
  rpc GetFriendList(FollowRequest) returns(GetFriendResponse){};

  // 批量获取用户
  rpc GetUsers(GetUserSRequest)returns(UserListResponse){};

  // 评论操作
  rpc ActionComment(ActionCommentRequest) returns(ActionCommentResponse){};
  // 获取评论
  rpc GetComment(GetCommentRequest) returns(GetCommentResponse){};

}
message GetUserSRequest{
  repeated int64 id = 1;
  int64 uuid = 2; // 如果登陆话, 传递这个, 表示还要查询是否关注这个人
}


message ActionCommentRequest{
  int64 uuid = 1; // 用户id
  int64 video_id = 2; // 视频id
  int32 action_type = 3; // 1-发布评论，2-删除评论
  string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
  int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
}
message ActionCommentResponse{
  BaseResp resp = 1;
  Comment comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
}

message GetCommentRequest{
  int64 video_id = 2; // 视频id
}

message GetCommentResponse{
  BaseResp resp = 1;
  repeated Comment comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
}

message User{
  int64  id = 1;
  string user_name = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  bool is_follow = 5;
}

message FriendUser {
  User user = 1;
  string message = 2;
  int64 msg_type = 3;
}

message Comment {
  int64 id = 1; // 视频评论id
  User user = 2; // 评论用户信息
  string content = 3; // 评论内容
  int64 create_date = 4; // 评论发布日期，格式 mm-dd
}



// 消息相关
message SaveMsgRequest{
  int64 from_user_id = 1;
  int64 to_user_id = 2;
  string content = 3;
  int64 created_at_s = 4; // 单位s
}
message SaveMsgResponse{
  BaseResp resp = 1;
}
message GetChatListRequest{
  int64 from_user_id = 1;
  int64 to_user_id = 2;
}
message GetChatListResponse{
  BaseResp resp = 1;
  repeated  Message message_list = 2;
}
message Message {
  int64 from_user_id = 1;
  int64 to_user_id = 2;
  string content = 3;
  int64 created_at_s = 4; // 单位s
  int64 message_id = 5;
}
message GetFriendChatRequest{
  int64 from_user_id = 1;
}
message GetFriendChatResponse{
  BaseResp resp = 1;
  repeated Message msg= 2;
}


service ChatService{
  rpc SendMsg(SaveMsgRequest) returns(SaveMsgResponse){}; //发送消息
  rpc GetChatList(GetChatListRequest) returns(GetChatListResponse){}; // 获取消息列表
  rpc GetFriendChatList(GetFriendChatRequest) returns (GetFriendChatResponse){};
}
