syntax = "proto3";
option go_package = "user;user";

message BaseResp{
  int64 status_code = 1;
  string status_msg = 2;
}
message RegisterRequest{
  string user_name = 1; // UserName
  string pass_word = 2; // PassWord
}
message CheckUserRequest{
  string user_name = 1; // UserName
  string pass_word = 2; // PassWord
}

message RegisterResponse{
  BaseResp resp = 1;
  int64 id = 2;
}
message CheckUserResponse{
  BaseResp resp = 1;
  int64 id = 2;
}
message GetUserRequest{
  int64 id = 1;
}
message GetUserResponse{
  BaseResp resp = 1;
  User user = 2;
}
message GetFollowerListRequest{
  int64 id = 1;
}
message UserListResponse{
  BaseResp resp = 1;
  repeated User user = 2;
}

message GetFollowListRequest{
  int64 id = 1;
}

message FollowRequest{
  int64 from_user_id = 1;
  int64 to_user_id = 2;
}

message FollowResponse{
  BaseResp resp = 1;
}

message GetFriendResponse{
  BaseResp resp = 1;
  repeated FriendUser user_list = 2;
}

service UserService{
  rpc Register(RegisterRequest) returns (RegisterResponse){};
  rpc CheckUser(CheckUserRequest) returns (CheckUserResponse){};
  rpc GetUser(GetUserRequest) returns(GetUserResponse){};
//  粉丝/好友列表
  rpc GetFollowerList(GetFollowerListRequest)returns(UserListResponse){};
//  关注列表
  rpc GetFollowList(GetFollowListRequest) returns(UserListResponse){};
//  关注某个用户
  rpc Follow(FollowRequest) returns(FollowResponse){};
//  取消关注某个用户
  rpc UnFollow(FollowRequest) returns(FollowResponse){};
// 获取好友列表, 并且获取当前好友的消息
  rpc GetFriendList(FollowRequest) returns(GetFriendResponse){};
}

message User{
  int64  id = 1;
  string user_name = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  bool is_follow = 5;
}

message FriendUser {
 User user = 1;
 string message = 2;
 int64 msg_type = 3;
}